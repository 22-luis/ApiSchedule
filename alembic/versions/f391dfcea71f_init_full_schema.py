"""init full schema

Revision ID: f391dfcea71f
Revises: 
Create Date: 2025-07-17 08:26:35.678312

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'f391dfcea71f'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute("DO $$ BEGIN IF EXISTS (SELECT 1 FROM pg_type WHERE typname = 'orderstatus') THEN DROP TYPE orderstatus; END IF; END $$;")
    op.create_table('order',
    sa.Column('lote', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.Column('dueDate', sa.Date(), nullable=True),
    sa.Column('status', sa.Enum('PENDING', 'COMPLETED', 'IN_PROGRESS', 'UNPROGRAMMED', name='orderstatus'), nullable=True),
    sa.Column('code', sa.String(), nullable=True),
    sa.Column('bin', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('lote')
    )
    op.create_table('preparation',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('minutes', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('code_team_association',
    sa.Column('code_id', sa.UUID(), nullable=True),
    sa.Column('team_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['code_id'], ['code.id'], ),
    sa.ForeignKeyConstraint(['team_id'], ['teams.id'], )
    )
    op.add_column('code', sa.Column('fabricationCode', sa.String(), nullable=True))
    op.add_column('code', sa.Column('usefulLife', sa.String(), nullable=True))
    op.drop_column('code', 'usefullife')
    op.drop_column('code', 'fabricationcode')
    op.add_column('task', sa.Column('code_id', sa.UUID(), nullable=True))
    op.add_column('task', sa.Column('lote', sa.String(), nullable=True))
    op.add_column('task', sa.Column('specification', sa.String(), nullable=True))
    op.add_column('task', sa.Column('preparation_id', sa.UUID(), nullable=True))
    op.add_column('task', sa.Column('start_time', sa.DateTime(), nullable=True))
    op.add_column('task', sa.Column('end_time', sa.DateTime(), nullable=True))
    op.alter_column('task', 'quantity',
               existing_type=sa.VARCHAR(),
               type_=sa.Integer(),
               existing_nullable=True,
               postgresql_using="quantity::integer"
    )
    op.create_foreign_key(None, 'task', 'code', ['code_id'], ['id'])
    op.create_foreign_key(None, 'task', 'preparation', ['preparation_id'], ['id'])
    op.drop_column('task', 'presentation')
    op.drop_column('task', 'related_task_code')
    op.drop_column('task', 'fabricationCode')
    op.drop_column('task', 'performance')
    op.drop_column('task', 'usefulLife')
    op.drop_column('task', 'description')
    op.drop_column('task', 'material')
    op.drop_column('task', 'code')
    op.drop_column('task', 'activity')
    op.drop_column('task', 'unit')
    op.drop_column('task', 'type')
    op.drop_column('task', 'people')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('task', sa.Column('people', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('task', sa.Column('type', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('task', sa.Column('unit', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('task', sa.Column('activity', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('task', sa.Column('code', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('task', sa.Column('material', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('task', sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('task', sa.Column('usefulLife', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('task', sa.Column('performance', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('task', sa.Column('fabricationCode', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('task', sa.Column('related_task_code', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('task', sa.Column('presentation', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'task', type_='foreignkey')
    op.drop_constraint(None, 'task', type_='foreignkey')
    op.alter_column('task', 'quantity',
               existing_type=sa.Integer(),
               type_=sa.VARCHAR(),
               existing_nullable=True)
    op.drop_column('task', 'end_time')
    op.drop_column('task', 'start_time')
    op.drop_column('task', 'preparation_id')
    op.drop_column('task', 'specification')
    op.drop_column('task', 'lote')
    op.drop_column('task', 'code_id')
    op.add_column('code', sa.Column('fabricationcode', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('code', sa.Column('usefullife', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_column('code', 'usefulLife')
    op.drop_column('code', 'fabricationCode')
    op.drop_table('code_team_association')
    op.drop_table('preparation')
    op.drop_table('order')
    # ### end Alembic commands ###
